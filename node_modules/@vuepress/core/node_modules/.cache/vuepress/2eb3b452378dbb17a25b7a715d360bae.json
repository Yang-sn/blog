{"remainingRequest":"C:\\Users\\Yang\\Desktop\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Yang\\Desktop\\blog\\node_modules\\vuepress-theme-reco\\components\\SidebarLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Yang\\Desktop\\blog\\node_modules\\vuepress-theme-reco\\components\\SidebarLinks.vue","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Yang\\Desktop\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Yang\\Desktop\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCwgcmVmLCBnZXRDdXJyZW50SW5zdGFuY2UsIHRvUmVmcywgb25VcGRhdGVkLCBvbk1vdW50ZWQgfSBmcm9tICd2dWUtZGVtaScKaW1wb3J0IFNpZGViYXJHcm91cCBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9TaWRlYmFyR3JvdXAnCmltcG9ydCBTaWRlYmFyTGluayBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9TaWRlYmFyTGluaycKaW1wb3J0IHsgaXNBY3RpdmUgfSBmcm9tICdAdGhlbWUvaGVscGVycy91dGlscycKCmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ1NpZGViYXJMaW5rcycsCgogIGNvbXBvbmVudHM6IHsgU2lkZWJhckdyb3VwLCBTaWRlYmFyTGluayB9LAoKICBwcm9wczogWwogICAgJ2l0ZW1zJywKICAgICdkZXB0aCcsIC8vIGRlcHRoIG9mIGN1cnJlbnQgc2lkZWJhciBsaW5rcwogICAgJ3NpZGViYXJEZXB0aCcgLy8gZGVwdGggb2YgaGVhZGVycyB0byBiZSBleHRyYWN0ZWQKICBdLAoKICBzZXR1cCAocHJvcHMsIGN0eCkgewogICAgY29uc3QgaW5zdGFuY2UgPSBnZXRDdXJyZW50SW5zdGFuY2UoKS5wcm94eQoKICAgIGNvbnN0IHsgaXRlbXMgfSA9IHRvUmVmcyhwcm9wcykKCiAgICBjb25zdCBvcGVuR3JvdXBJbmRleCA9IHJlZigwKQoKICAgIGNvbnN0IHJlZnJlc2hJbmRleCA9ICgpID0+IHsKICAgICAgY29uc3QgaW5kZXggPSByZXNvbHZlT3Blbkdyb3VwSW5kZXgoCiAgICAgICAgaW5zdGFuY2UuJHJvdXRlLAogICAgICAgIGl0ZW1zLnZhbHVlCiAgICAgICkKICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICBvcGVuR3JvdXBJbmRleC52YWx1ZSA9IGluZGV4CiAgICAgIH0KICAgIH0KCiAgICBjb25zdCBhY3RpdmF0aW9uQW5jaG9yID0gKCkgPT4gewogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgY29uc3QgYW5jaG9ycyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChBSExfSEVBREVSX0FOQ0hPUl9TRUxFQ1RPUikpCiAgICAgICAgLmZpbHRlcihhbmNob3IgPT4gZGVjb2RlVVJJQ29tcG9uZW50KGluc3RhbmNlLiRyb3V0ZS5mdWxsUGF0aCkuaW5kZXhPZihkZWNvZGVVUklDb21wb25lbnQoYW5jaG9yLmhhc2gpKSAhPSAtMSkKICAgICAgaWYgKGFuY2hvcnMgPT0gbnVsbCB8fCBhbmNob3JzLmxlbmd0aCA8IDEgfHwgYW5jaG9yc1swXS5vZmZzZXRUb3AgPT0gdW5kZWZpbmVkKSByZXR1cm4KICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIGFuY2hvcnNbMF0ub2Zmc2V0VG9wICsgMTYwKQogICAgICB9LCAxMDApCiAgICB9CgogICAgY29uc3QgYWN0aXZhdGlvbkxpbmsgPSAoKSA9PiB7CiAgICAgIGNvbnN0IHN1YnRpdGxlTmFtZSA9IGRlY29kZVVSSUNvbXBvbmVudChpbnN0YW5jZS4kcm91dGUuZnVsbFBhdGgpCiAgICAgIGlmICghc3VidGl0bGVOYW1lIHx8IHN1YnRpdGxlTmFtZSA9PSAnJykgcmV0dXJuCiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICBjb25zdCBzdWJ0aXRsZXMgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoQUhMX1NJREVCQVJfTElOS19TRUxFQ1RPUikpCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3VidGl0bGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKGRlY29kZVVSSUNvbXBvbmVudChzdWJ0aXRsZXNbaV0uZ2V0QXR0cmlidXRlKCdocmVmJykpLmluZGV4T2Yoc3VidGl0bGVOYW1lKSAhPSAtMSkgewogICAgICAgICAgc3VidGl0bGVzW2ldLmNsaWNrKCkKICAgICAgICAgIGFjdGl2YXRpb25BbmNob3IoKQogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgY29uc3QgaXNJblZpZXdQb3J0T2ZPbmUgPSAoKSA9PiB7CiAgICAgIGNvbnN0IHNpZGViYXJTY3JvbGwgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdzaWRlYmFyJylbMF0KICAgICAgbGV0IGVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYWN0aXZlIHNpZGViYXItbGluaycpWzFdCiAgICAgIGlmIChlbCA9PSBudWxsIHx8IGVsID09IHVuZGVmaW5lZCB8fCBlbC5vZmZzZXRUb3AgPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdhY3RpdmUgc2lkZWJhci1saW5rJylbMF0KICAgICAgfQogICAgICBpZiAoZWwgPT0gbnVsbCB8fCBlbCA9PSB1bmRlZmluZWQgfHwgZWwub2Zmc2V0VG9wID09IHVuZGVmaW5lZCkgcmV0dXJuCgogICAgICBjb25zdCB2aWV3UG9ydEhlaWdodCA9IHNpZGViYXJTY3JvbGwuY2xpZW50SGVpZ2h0IHx8IHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IHx8IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0CiAgICAgIGNvbnN0IG9mZnNldFRvcCA9IGVsLm9mZnNldFRvcAogICAgICBjb25zdCBvZmZzZXRCb3R0b20gPSBlbC5vZmZzZXRUb3AgKyBlbC5vZmZzZXRIZWlnaHQKICAgICAgY29uc3Qgc2Nyb2xsVG9wID0gc2lkZWJhclNjcm9sbC5zY3JvbGxUb3AKICAgICAgY29uc3QgYm90dG9tVmlzaWJsZSA9IChvZmZzZXRCb3R0b20gPD0gdmlld1BvcnRIZWlnaHQgKyBzY3JvbGxUb3ApCiAgICAgIGlmICghYm90dG9tVmlzaWJsZSkgewogICAgICAgIHNpZGViYXJTY3JvbGwuc2Nyb2xsVG9wID0gKG9mZnNldEJvdHRvbSArIDUgLSB2aWV3UG9ydEhlaWdodCkKICAgICAgfQogICAgICBjb25zdCB0b3BWaXNpYmxlID0gKG9mZnNldFRvcCA+PSBzY3JvbGxUb3ApCiAgICAgIGlmICghdG9wVmlzaWJsZSkgewogICAgICAgIHNpZGViYXJTY3JvbGwuc2Nyb2xsVG9wID0gKG9mZnNldFRvcCAtIDUpCiAgICAgIH0KICAgIH0KCiAgICBjb25zdCB0b2dnbGVHcm91cCA9IChpbmRleCkgPT4gewogICAgICBpbnN0YW5jZS5vcGVuR3JvdXBJbmRleCA9IGluZGV4ID09PSBpbnN0YW5jZS5vcGVuR3JvdXBJbmRleCA/IC0xIDogaW5kZXgKICAgIH0KCiAgICBjb25zdCBpc0FjdGl2ZSA9IChwYWdlKSA9PiB7CiAgICAgIHJldHVybiBpc0FjdGl2ZShpbnN0YW5jZS4kcm91dGUsIHBhZ2UucmVndWxhclBhdGgpCiAgICB9CgogICAgcmVmcmVzaEluZGV4KCkKCiAgICBvbk1vdW50ZWQoKCkgPT4gewogICAgICBhY3RpdmF0aW9uTGluaygpCiAgICAgIGlzSW5WaWV3UG9ydE9mT25lKCkKICAgIH0pCgogICAgb25VcGRhdGVkKCgpID0+IGlzSW5WaWV3UG9ydE9mT25lKCkpCgogICAgcmV0dXJuIHsgb3Blbkdyb3VwSW5kZXgsIHJlZnJlc2hJbmRleCwgdG9nZ2xlR3JvdXAsIGlzQWN0aXZlIH0KICB9LAoKICB3YXRjaDogewogICAgJyRyb3V0ZScgKCkgewogICAgICB0aGlzLnJlZnJlc2hJbmRleCgpCiAgICB9CiAgfQp9KQoKZnVuY3Rpb24gcmVzb2x2ZU9wZW5Hcm91cEluZGV4IChyb3V0ZSwgaXRlbXMpIHsKICBmb3IgKGxldCBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7CiAgICBjb25zdCBpdGVtID0gaXRlbXNbaV0KICAgIGlmIChpdGVtLnR5cGUgPT09ICdncm91cCcgJiYgaXRlbS5jaGlsZHJlbi5zb21lKGMgPT4gYy50eXBlID09PSAncGFnZScgJiYgaXNBY3RpdmUocm91dGUsIGMucGF0aCkpKSB7CiAgICAgIHJldHVybiBpCiAgICB9CiAgfQogIHJldHVybiAtMQp9Cg=="},{"version":3,"sources":["SidebarLinks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidebarLinks.vue","sourceRoot":"node_modules/vuepress-theme-reco/components","sourcesContent":["<template>\n  <ul\n    class=\"sidebar-links\"\n    v-if=\"items.length\"\n  >\n    <li v-for=\"(item, i) in items\" :key=\"i\">\n      <SidebarGroup\n        v-if=\"item.type === 'group'\"\n        :item=\"item\"\n        :open=\"i === openGroupIndex\"\n        :collapsable=\"item.collapsable || item.collapsible\"\n        :depth=\"depth\"\n        @toggle=\"toggleGroup(i)\"\n      />\n      <SidebarLink\n        v-else\n        :sidebarDepth=\"sidebarDepth\"\n        :item=\"item\"\n      />\n    </li>\n  </ul>\n</template>\n\n<script>\nimport { defineComponent, ref, getCurrentInstance, toRefs, onUpdated, onMounted } from 'vue-demi'\nimport SidebarGroup from '@theme/components/SidebarGroup'\nimport SidebarLink from '@theme/components/SidebarLink'\nimport { isActive } from '@theme/helpers/utils'\n\nexport default defineComponent({\n  name: 'SidebarLinks',\n\n  components: { SidebarGroup, SidebarLink },\n\n  props: [\n    'items',\n    'depth', // depth of current sidebar links\n    'sidebarDepth' // depth of headers to be extracted\n  ],\n\n  setup (props, ctx) {\n    const instance = getCurrentInstance().proxy\n\n    const { items } = toRefs(props)\n\n    const openGroupIndex = ref(0)\n\n    const refreshIndex = () => {\n      const index = resolveOpenGroupIndex(\n        instance.$route,\n        items.value\n      )\n      if (index > -1) {\n        openGroupIndex.value = index\n      }\n    }\n\n    const activationAnchor = () => {\n      // eslint-disable-next-line no-undef\n      const anchors = [].slice.call(document.querySelectorAll(AHL_HEADER_ANCHOR_SELECTOR))\n        .filter(anchor => decodeURIComponent(instance.$route.fullPath).indexOf(decodeURIComponent(anchor.hash)) != -1)\n      if (anchors == null || anchors.length < 1 || anchors[0].offsetTop == undefined) return\n      setTimeout(function () {\n        window.scrollTo(0, anchors[0].offsetTop + 160)\n      }, 100)\n    }\n\n    const activationLink = () => {\n      const subtitleName = decodeURIComponent(instance.$route.fullPath)\n      if (!subtitleName || subtitleName == '') return\n      // eslint-disable-next-line no-undef\n      const subtitles = [].slice.call(document.querySelectorAll(AHL_SIDEBAR_LINK_SELECTOR))\n      for (let i = 0; i < subtitles.length; i++) {\n        if (decodeURIComponent(subtitles[i].getAttribute('href')).indexOf(subtitleName) != -1) {\n          subtitles[i].click()\n          activationAnchor()\n          return\n        }\n      }\n    }\n\n    const isInViewPortOfOne = () => {\n      const sidebarScroll = document.getElementsByClassName('sidebar')[0]\n      let el = document.getElementsByClassName('active sidebar-link')[1]\n      if (el == null || el == undefined || el.offsetTop == undefined) {\n        el = document.getElementsByClassName('active sidebar-link')[0]\n      }\n      if (el == null || el == undefined || el.offsetTop == undefined) return\n\n      const viewPortHeight = sidebarScroll.clientHeight || window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n      const offsetTop = el.offsetTop\n      const offsetBottom = el.offsetTop + el.offsetHeight\n      const scrollTop = sidebarScroll.scrollTop\n      const bottomVisible = (offsetBottom <= viewPortHeight + scrollTop)\n      if (!bottomVisible) {\n        sidebarScroll.scrollTop = (offsetBottom + 5 - viewPortHeight)\n      }\n      const topVisible = (offsetTop >= scrollTop)\n      if (!topVisible) {\n        sidebarScroll.scrollTop = (offsetTop - 5)\n      }\n    }\n\n    const toggleGroup = (index) => {\n      instance.openGroupIndex = index === instance.openGroupIndex ? -1 : index\n    }\n\n    const isActive = (page) => {\n      return isActive(instance.$route, page.regularPath)\n    }\n\n    refreshIndex()\n\n    onMounted(() => {\n      activationLink()\n      isInViewPortOfOne()\n    })\n\n    onUpdated(() => isInViewPortOfOne())\n\n    return { openGroupIndex, refreshIndex, toggleGroup, isActive }\n  },\n\n  watch: {\n    '$route' () {\n      this.refreshIndex()\n    }\n  }\n})\n\nfunction resolveOpenGroupIndex (route, items) {\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    if (item.type === 'group' && item.children.some(c => c.type === 'page' && isActive(route, c.path))) {\n      return i\n    }\n  }\n  return -1\n}\n</script>\n"]}]}